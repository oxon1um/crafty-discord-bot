

API V2
Contents

### Contents ###
1
Introduction
1.1
Important information
1.2
XH examples
1.3
Example request in raw HTTP
1.4
JSON schemas
2
API V2 Endpoints
2.1
Authentication requests
2.1.1
Log out every single session the token's user has
2.1.2
Log in and get a token
2.2
Role requests
2.2.1
Get all the roles
2.2.2
Create a role
2.2.3
Get a role
2.2.4
Get a role's servers
2.2.5
Get a role's users
2.2.6
Delete a role
2.2.7
Modify a role
2.3
Server requests
2.3.1
Get all the servers
2.3.2
Create a server
2.3.3
Get a server
2.3.4
Delete a server
2.3.5
Modify a server
2.3.6
Send an action to a server
2.3.7
Send a STDIn command to a server
2.3.8
Get a server's logs
2.3.9
Get a server's public data
2.3.10
Get a server's statistics
2.3.11
Get everyone with access to a server
2.3.12
Create a Schedule For a Server
2.3.13
Modify a Schedule For a Server
2.3.14
Remove A Schedule
2.3.15
Create A Server Webhook
2.3.16
Modify A Server Webhook
2.3.17
Test A Server Webhook
2.3.18
Get All Server Webhooks
2.3.19
Get Webhook
2.3.20
Delete Webhooks
2.4
User requests
2.4.1
Get all the users
2.4.2
Create a user
2.4.3
Get a user
2.4.4
Delete a user
2.4.5
Modify a user
2.4.6
Get a user's Crafty permissions
2.4.7
Get a user's profile picture
2.4.8
Get a user's public data
2.5
Crafty requests
2.5.1
Modify Config.json

### Introduction ###
Introduction

### Important information ###
Important information

### XH examples ###
XH examples
I'll feature examples using the XH HTTP client and some shell for some endpoints. Please set a shell variable with the name of token if you intend to try the examples.

### Example request in raw HTTP ###
Example request in raw HTTP
POST /api/v2/users HTTP 1.1
Authorization: Bearer 
Content-Type: application/json

{
    "username": "test",
    "password": "test",
    "manager": "1"
    "email": "john.smith@example.com",
    "lang": "fi_FI",
    "superuser": true,
    "theme": "dark",
}
1
{
"username"
"test"
"password"
"test"
"manager"
"1"
"email"
"john.smith@example.com"
"lang"
"fi_FI"
"superuser"
"theme"
"dark"
}

### JSON schemas ###
JSON schemas
Here is a list of available JSON schemas found at jsonschema.py:

### API V2 Endpoints ###
API V2 Endpoints

### Authentication requests ###
Authentication requests

### Log out every single session the token's user has ###
Log out every single session the token's user has
XH example(s):
xh -A bearer -a "$token" POST https://localhost:8443/api/v2/auth/invalidate_tokens
"
$token
"
POST /api/v2/auth/invalidate_tokens
Example response body:
{
  "status": "ok"
}
{
"status"
:
"ok"
}

### Log in and get a token ###
Log in and get a token
XH example(s):
token="$(xh POST https://localhost:8443/api/v2/auth/login -- username=admin password=crafty | jq .data.token -r)"
token
=
"
$(
username
=
password
=
|
)
"
POST /api/v2/auth/login
Example request body:
{
    "username": "test",
    "password": "test"
}
{
"username"
:
"test"
,
"password"
:
"test"
}
Example response body:
{
    "status": "ok",
    "data": {
        "token": "",
        "user_id": "1"
    }
}
{
"status"
:
"ok"
,
"data"
:
{
"token"
:
""
,
"user_id"
:
"1"
}
}

### Role requests ###
Role requests

### Get all the roles ###
Get all the roles
XH example(s):
xh -A bearer -a "$token" GET https://localhost:8443/api/v2/roles
"
$token
"
xh -A bearer -a "$token" GET https://localhost:8443/api/v2/roles\?ids\=true
"
$token
"
\?
\=
true
GET /api/v2/roles
GET /api/v2/roles?ids=true
Example response body for the path /api/v2/roles:
{
    "status": "ok",
    "data": [
        {
            "role_id": 1,
            "created": "05/18/2022, 16:25:45",
            "last_update": "2022-05-18T16:25:45.377352",
            "role_name": "test 1234"
        }
    ]
}
{
"status"
:
"ok"
,
"data"
:
[
{
"role_id"
:
1
,
"created"
:
"05/18/2022, 16:25:45"
,
"last_update"
:
"2022-05-18T16:25:45.377352"
,
"role_name"
:
"test 1234"
}
]
}
Example response body for the path /api/v2/roles?ids=true:
{
    "status": "ok",
    "data": [
        1
    ]
}
{
"status"
:
"ok"
,
"data"
:
[
1
]
}

### Create a role ###
Create a role
XH example(s):
xh -A bearer -a "$token" POST https://localhost:8443/api/v2/roles -- name='test 1234' servers:='[{"server_id": 1, "permissions": "10101101"}]'
"
$token
"
name
=
'test 1234'
=
'[{"server_id": 1, "permissions": "10101101"}]'
POST /api/v2/roles
Example request body:
{
    "name": "test role 1234",
    "servers": [
        {
            "server_id": 1,
            "permissions": "10101101"
        }
    ]
}
{
"name"
:
"test role 1234"
,
"servers"
:
[
{
"server_id"
:
1
,
"permissions"
:
"10101101"
}
]
}
Example response body:
{
    "status": "ok",
    "data": {
        "role_id": 1
    }
}
{
"status"
:
"ok"
,
"data"
:
{
"role_id"
:
1
}
}

### Get a role ###
Get a role
XH example(s):
xh -A bearer -a "$token" GET https://localhost:8443/api/v2/roles/1
"
$token
"
GET /api/v2/roles/
Example response body:
{
    "status": "ok",
    "data": {
        "role_id": 1,
        "created": "05/18/2022, 22:49:11",
        "last_update": "2022-05-18T16:25:45.377352",
        "role_name": "test 1234"
    }
}
{
"status"
"ok"
"data"
{
"role_id"
1
"created"
"05/18/2022, 22:49:11"
"last_update"
"2022-05-18T16:25:45.377352"
"role_name"
"test 1234"
}
}

### Get a role's servers ###
Get a role's servers
XH example(s):
xh -A bearer -a "$token" GET https://localhost:8443/api/v2/roles/1/servers
"
$token
"
xh -A bearer -a "$token" GET https://localhost:8443/api/v2/roles/1/servers\?ids\=true
"
$token
"
\?
\=
true
GET /api/v2/roles//servers
GET /api/v2/roles//servers?ids=true
Example response body for the path /api/v2/roles//servers:
{
    "status": "ok",
    "data": [
        {
            "server_id": 1,
            "permissions": "10101101"
        }
    ]
}
{
"status"
:
"ok"
,
"data"
:
[
{
"server_id"
:
1
,
"permissions"
:
"10101101"
}
]
}
Example response body for the path /api/v2/roles//servers?ids=true:
{
    "status": "ok",
    "data": [
        1
    ]
}
{
"status"
:
"ok"
,
"data"
:
[
1
]
}

### Get a role's users ###
Get a role's users
XH example(s):
xh -A bearer -a "$token" GET https://localhost:8443/api/v2/roles/1/users
"
$token
"
GET /api/v2/roles//users
Example response body:
{
    "status": "ok",
    "data": [
        1
    ]
}
{
"status"
:
"ok"
,
"data"
:
[
1
]
}

### Delete a role ###
Delete a role
XH example(s):
xh -A bearer -a "$token" DELETE https://localhost:8443/api/v2/roles/2
"
$token
"
DELETE /api/v2/roles/
Example response body:
{
    "status": "ok"
}
{
"status"
:
"ok"
}

### Modify a role ###
Modify a role
XH example(s):
xh -A bearer -a "$token" PATCH https://localhost:8443/api/v2/roles/1 -- name='renamed test role 1234' servers:='[{"server_id": 1, "permissions": "10101101"}]'
"
$token
"
name
=
'renamed test role 1234'
=
'[{"server_id": 1, "permissions": "10101101"}]'
PATCH /api/v2/roles/
Example request body:
{
    "name": "renamed test role 1234",
    "servers": [
        {
            "server_id": 1,
            "permissions": "10101101"
        }
    ]
}
{
"name"
:
"renamed test role 1234"
,
"servers"
:
[
{
"server_id"
:
1
,
"permissions"
:
"10101101"
}
]
}
Example response body: 
Example response body:
{
    "status": "ok",
    "data": {
        "role_id": 1,
        "created": "05/18/2022, 22:49:11",
        "last_update": "2022-05-18T16:25:45.377352",
        "role_name": "test 1234"
    }
}
{
"status"
:
"ok"
,
"data"
:
{
"role_id"
:
1
,
"created"
:
"05/18/2022, 22:49:11"
,
"last_update"
:
"2022-05-18T16:25:45.377352"
,
"role_name"
:
"test 1234"
}
}

### Delete a server ###
Delete a server
XH example(s):
xh -A bearer -a "$token" DELETE https://localhost:8443/api/v2/servers/1
"
$token
"
DELETE /api/v2/servers/
Example response body:
{
    "status": "ok"
}
{
"status"
:
"ok"
}

### Modify a server ###
Modify a server
XH example(s):
xh -A bearer -a "$token" PATCH https://localhost:8443/api/v2/servers/1 -- server_name='api test server'
"
$token
"
server_name
=
'api test server'
PATCH /api/v2/servers/
Example request body:
{
    "server_name": "api test server"
}
{
"server_name"
:
"api test server"
}
Example response body:
{
    "status": "ok"
}
{
"status"
:
"ok"
}

### Send an action to a server ###
Send an action to a server
XH example(s):
xh -A bearer -a "$token" POST https://localhost:8443/api/v2/servers/1/action/start_server
"
$token
"
POST /api/v2/servers//action/
Example response bodies:
{
    "status": "ok"
}
{
"status"
:
"ok"
}
{
    "status": "ok"
    "data": {
        "new_server_id": "3"
    }
}
{
"status"
:
"ok"
"data"
:
{
"new_server_id"
:
"3"
}
}

### Send a STDIn command to a server ###
Send a STDIn command to a server
XH example(s):
xh -A bearer -a "$token" POST https://localhost:8443/api/v2/servers/1/stdin
"
$token
"
POST /api/v2/servers//stdin
Example Request Body
say the server will restart in 5 minutes
Example response bodies:
{
    "status": "ok"
}
{
"status"
:
"ok"
}

### Get a server's logs ###
Get a server's logs
XH example(s):
xh -A bearer -a "$token" GET https://localhost:8443/api/v2/servers/1/logs
"
$token
"
xh -A bearer -a "$token" GET https://localhost:8443/api/v2/servers/1/logs\?raw\=true\&file\=true
"
$token
"
\?
\=
\&
\=
true
xh -A bearer -a "$token" GET https://localhost:8443/api/v2/servers/1/logs\?colors\=true\&html\=true
"
$token
"
\?
\=
\&
\=
true
GET /api/v2/servers//logs
Example response bodies:
{
    "status": "ok",
    "data": [
        "Picked up _JAVA_OPTIONS: -Dawt.useSystemAAFontSettings=on -Dswing.aatext=true -Djava.util.prefs.userRoot="$XDG_CONFIG_HOME"/java",
        "Starting org.bukkit.craftbukkit.Main",
        "System Info: Java 18 (OpenJDK 64-Bit Server VM 18.0.1.1+2) Host: Linux 5.17.9-arch1-1 (amd64)",
        "Loading libraries, please wait...",
        "2022-05-25 18:27:53,400 ServerMain WARN Advanced terminal features are not available in this environment",
        "[18:27:55 INFO]: Environment: authHost='https://authserver.mojang.com', accountsHost='https://api.mojang.com', sessionHost='https://sessionserver.mojang.com', servicesHost='https://api.minecraftservices.com', name='PROD'",
        "[18:27:56 INFO]: Loaded 7 recipes",
        "[18:27:57 INFO]: Starting minecraft server version 1.18.2",
        "[18:27:57 INFO]: Loading properties",
        "[18:27:57 INFO]: This server is running Paper version git-Paper-344 (MC: 1.18.2) (Implementing API version 1.18.2-R0.1-SNAPSHOT) (Git: 31ccc57)",
        "[18:27:57 INFO]: Server Ping Player Sample Count: 12",
        "[18:27:57 INFO]: Using 4 threads for Netty based IO",
        "[18:27:57 INFO]: Default game type: SURVIVAL",
        "[18:27:57 INFO]: Generating keypair",
        "[18:27:57 INFO]: Starting Minecraft server on *:25565",
        "[18:27:57 INFO]: Using epoll channel type",
        "[18:27:57 INFO]: Paper: Using libdeflate (Linux x86_64) compression from Velocity.",
        "[18:27:57 INFO]: Paper: Using OpenSSL 1.1.x (Linux x86_64) cipher from Velocity.",
        "[18:27:57 INFO]: Server permissions file permissions.yml is empty, ignoring it",
        "[18:27:57 INFO]: Preparing level "world"",
        "[18:27:58 INFO]: Preparing start region for dimension minecraft:overworld",
        "[18:27:58 INFO]: Time elapsed: 157 ms",
        "[18:27:58 INFO]: Preparing start region for dimension minecraft:the_nether",
        "[18:27:58 INFO]: Time elapsed: 56 ms",
        "[18:27:58 INFO]: Preparing start region for dimension minecraft:the_end",
        "[18:27:58 INFO]: Time elapsed: 90 ms",
        "[18:27:58 INFO]: Running delayed init tasks",
        "[18:27:58 INFO]: Done (1.170s)! For help, type "help"",
        "[18:27:58 INFO]: Timings Reset"
    ]
}
{
"status"
:
"ok"
,
"data"
:
[
"Picked up _JAVA_OPTIONS: -Dawt.useSystemAAFontSettings=on -Dswing.aatext=true -Djava.util.prefs.userRoot="$XDG_CONFIG_HOME"/java"
,
"Starting org.bukkit.craftbukkit.Main"
,
"System Info: Java 18 (OpenJDK 64-Bit Server VM 18.0.1.1+2) Host: Linux 5.17.9-arch1-1 (amd64)"
,
"Loading libraries, please wait..."
,
"2022-05-25 18:27:53,400 ServerMain WARN Advanced terminal features are not available in this environment"
,
"[18:27:55 INFO]: Environment: authHost='https://authserver.mojang.com', accountsHost='https://api.mojang.com', sessionHost='https://sessionserver.mojang.com', servicesHost='https://api.minecraftservices.com', name='PROD'"
,
"[18:27:56 INFO]: Loaded 7 recipes"
,
"[18:27:57 INFO]: Starting minecraft server version 1.18.2"
,
"[18:27:57 INFO]: Loading properties"
,
"[18:27:57 INFO]: This server is running Paper version git-Paper-344 (MC: 1.18.2) (Implementing API version 1.18.2-R0.1-SNAPSHOT) (Git: 31ccc57)"
,
"[18:27:57 INFO]: Server Ping Player Sample Count: 12"
,
"[18:27:57 INFO]: Using 4 threads for Netty based IO"
,
"[18:27:57 INFO]: Default game type: SURVIVAL"
,
"[18:27:57 INFO]: Generating keypair"
,
"[18:27:57 INFO]: Starting Minecraft server on *:25565"
,
"[18:27:57 INFO]: Using epoll channel type"
,
"[18:27:57 INFO]: Paper: Using libdeflate (Linux x86_64) compression from Velocity."
,
"[18:27:57 INFO]: Paper: Using OpenSSL 1.1.x (Linux x86_64) cipher from Velocity."
,
"[18:27:57 INFO]: Server permissions file permissions.yml is empty, ignoring it"
,
"[18:27:57 INFO]: Preparing level "world""
,
"[18:27:58 INFO]: Preparing start region for dimension minecraft:overworld"
,
"[18:27:58 INFO]: Time elapsed: 157 ms"
,
"[18:27:58 INFO]: Preparing start region for dimension minecraft:the_nether"
,
"[18:27:58 INFO]: Time elapsed: 56 ms"
,
"[18:27:58 INFO]: Preparing start region for dimension minecraft:the_end"
,
"[18:27:58 INFO]: Time elapsed: 90 ms"
,
"[18:27:58 INFO]: Running delayed init tasks"
,
"[18:27:58 INFO]: Done (1.170s)! For help, type "help""
,
"[18:27:58 INFO]: Timings Reset"
]
}
{
    "status": "ok",
    "data": [
        "[18:27:55] [ServerMain/INFO]: Environment: authHost='https://authserver.mojang.com', accountsHost='https://api.mojang.com', sessionHost='https://sessionserver.mojang.com', servicesHost='https://api.minecraftservices.com', name='PROD'",
        "[18:27:56] [Worker-Main-3/INFO]: Loaded 7 recipes",
        "[18:27:57] [Server thread/INFO]: Starting minecraft server version 1.18.2",
        "[18:27:57] [Server thread/INFO]: Loading properties",
        "[18:27:57] [Server thread/INFO]: This server is running Paper version git-Paper-344 (MC: 1.18.2) (Implementing API version 1.18.2-R0.1-SNAPSHOT) (Git: 31ccc57)",
        "[18:27:57] [Server thread/INFO]: Server Ping Player Sample Count: 12",
        "[18:27:57] [Server thread/INFO]: Using 4 threads for Netty based IO",
        "[18:27:57] [Server thread/INFO]: Default game type: SURVIVAL",
        "[18:27:57] [Server thread/INFO]: Generating keypair",
        "[18:27:57] [Server thread/INFO]: Starting Minecraft server on *:25565",
        "[18:27:57] [Server thread/INFO]: Using epoll channel type",
        "[18:27:57] [Server thread/INFO]: Paper: Using libdeflate (Linux x86_64) compression from Velocity.",
        "[18:27:57] [Server thread/INFO]: Paper: Using OpenSSL 1.1.x (Linux x86_64) cipher from Velocity.",
        "[18:27:57] [Server thread/INFO]: Server permissions file permissions.yml is empty, ignoring it",
        "[18:27:57] [Server thread/INFO]: Preparing level \"world\"",
        "[18:27:58] [Server thread/INFO]: Preparing start region for dimension minecraft:overworld",
        "[18:27:58] [Server thread/INFO]: Time elapsed: 157 ms",
        "[18:27:58] [Server thread/INFO]: Preparing start region for dimension minecraft:the_nether",
        "[18:27:58] [Server thread/INFO]: Time elapsed: 56 ms",
        "[18:27:58] [Server thread/INFO]: Preparing start region for dimension minecraft:the_end",
        "[18:27:58] [Server thread/INFO]: Time elapsed: 90 ms",
        "[18:27:58] [Server thread/INFO]: Running delayed init tasks",
        "[18:27:58] [Server thread/INFO]: Done (1.170s)! For help, type \"help\"",
        "[18:27:58] [Server thread/INFO]: Timings Reset"
    ]
}
{
"status"
:
"ok"
,
"data"
:
[
"[18:27:55] [ServerMain/INFO]: Environment: authHost='https://authserver.mojang.com', accountsHost='https://api.mojang.com', sessionHost='https://sessionserver.mojang.com', servicesHost='https://api.minecraftservices.com', name='PROD'"
,
"[18:27:56] [Worker-Main-3/INFO]: Loaded 7 recipes"
,
"[18:27:57] [Server thread/INFO]: Starting minecraft server version 1.18.2"
,
"[18:27:57] [Server thread/INFO]: Loading properties"
,
"[18:27:57] [Server thread/INFO]: This server is running Paper version git-Paper-344 (MC: 1.18.2) (Implementing API version 1.18.2-R0.1-SNAPSHOT) (Git: 31ccc57)"
,
"[18:27:57] [Server thread/INFO]: Server Ping Player Sample Count: 12"
,
"[18:27:57] [Server thread/INFO]: Using 4 threads for Netty based IO"
,
"[18:27:57] [Server thread/INFO]: Default game type: SURVIVAL"
,
"[18:27:57] [Server thread/INFO]: Generating keypair"
,
"[18:27:57] [Server thread/INFO]: Starting Minecraft server on *:25565"
,
"[18:27:57] [Server thread/INFO]: Using epoll channel type"
,
"[18:27:57] [Server thread/INFO]: Paper: Using libdeflate (Linux x86_64) compression from Velocity."
,
"[18:27:57] [Server thread/INFO]: Paper: Using OpenSSL 1.1.x (Linux x86_64) cipher from Velocity."
,
"[18:27:57] [Server thread/INFO]: Server permissions file permissions.yml is empty, ignoring it"
,
"[18:27:57] [Server thread/INFO]: Preparing level \"world\""
,
"[18:27:58] [Server thread/INFO]: Preparing start region for dimension minecraft:overworld"
,
"[18:27:58] [Server thread/INFO]: Time elapsed: 157 ms"
,
"[18:27:58] [Server thread/INFO]: Preparing start region for dimension minecraft:the_nether"
,
"[18:27:58] [Server thread/INFO]: Time elapsed: 56 ms"
,
"[18:27:58] [Server thread/INFO]: Preparing start region for dimension minecraft:the_end"
,
"[18:27:58] [Server thread/INFO]: Time elapsed: 90 ms"
,
"[18:27:58] [Server thread/INFO]: Running delayed init tasks"
,
"[18:27:58] [Server thread/INFO]: Done (1.170s)! For help, type \"help\""
,
"[18:27:58] [Server thread/INFO]: Timings Reset"
]
}
Picked up _JAVA_OPTIONS: -Dawt.useSystemAAFontSettings=on -Dswing.aatext=true -Djava.util.prefs.userRoot="$XDG_CONFIG_HOME"/java
Starting org.bukkit.craftbukkit.Main
System Info: Java 18 (OpenJDK 64-Bit Server VM 18.0.1.1+2) Host: Linux 5.17.9-arch1-1 (amd64)
Loading libraries, please wait...
2022-05-25 18:27:53,400 ServerMain WARN Advanced terminal features are not available in this environment
[18:27:55 INFO]: Environment: authHost='https://authserver.mojang.com', accountsHost='https://api.mojang.com', sessionHost='https://sessionserver.mojang.com', servicesHost='https://api.minecraftservices.com', name='PROD'
[18:27:56 INFO]: Loaded 7 recipes
[18:27:57 INFO]: Starting minecraft server version 1.18.2
[18:27:57 INFO]: Loading properties
[18:27:57 INFO]: This server is running Paper version git-Paper-344 (MC: 1.18.2) (Implementing API version 1.18.2-R0.1-SNAPSHOT) (Git: 31ccc57)
[18:27:57 INFO]: Server Ping Player Sample Count: 12
[18:27:57 INFO]: Using 4 threads for Netty based IO
[18:27:57 INFO]: Default game type: SURVIVAL
[18:27:57 INFO]: Generating keypair
[18:27:57 INFO]: Starting Minecraft server on *:25565
[18:27:57 INFO]: Using epoll channel type
[18:27:57 INFO]: Paper: Using libdeflate (Linux x86_64) compression from Velocity.
[18:27:57 INFO]: Paper: Using OpenSSL 1.1.x (Linux x86_64) cipher from Velocity.
[18:27:57 INFO]: Server permissions file permissions.yml is empty, ignoring it
[18:27:57 INFO]: Preparing level "world"
[18:27:58 INFO]: Preparing start region for dimension minecraft:overworld
[18:27:58 INFO]: Time elapsed: 157 ms
[18:27:58 INFO]: Preparing start region for dimension minecraft:the_nether
[18:27:58 INFO]: Time elapsed: 56 ms
[18:27:58 INFO]: Preparing start region for dimension minecraft:the_end
[18:27:58 INFO]: Time elapsed: 90 ms
[18:27:58 INFO]: Running delayed init tasks
[18:27:58 INFO]: Done (1.170s)! For help, type "help"
[18:27:58 INFO]: Timings Reset

=
=
true
=
&
;
$XDG_CONFIG_HOME
&
;
18
(
64
18
)
5
(
)
18
in
class
=
"mc-log-info"
[
18
]
authHost
=
&
#x27;https://authserver.mojang.com', accountsHost='https://api.mojang.com', sessionHost='https://sessionserver.mojang.com', servicesHost='https://api.minecraftservices.com', name='PROD'
[18:27:56 INFO]: Loaded 7 recipes
[18:27:57 INFO]: Starting minecraft server version 1.18.2
[18:27:57 INFO]: Loading properties
[18:27:57 INFO]: This server is running Paper version git-Paper-344 (MC: 1.18.2) (Implementing API version 1.18.2-R0.1-SNAPSHOT) (Git: 31ccc57)
[18:27:57 INFO]: Server Ping Player Sample Count: 12
[18:27:57 INFO]: Using 4 threads for Netty based IO
[18:27:57 INFO]: Default game type: SURVIVAL
[18:27:57 INFO]: Generating keypair
[18:27:57 INFO]: Starting Minecraft server on *:25565
[18:27:57 INFO]: Using epoll channel type
[18:27:57 INFO]: Paper: Using libdeflate (Linux x86_64) compression from Velocity.
[18:27:57 INFO]: Paper: Using OpenSSL 1.1.x (Linux x86_64) cipher from Velocity.
[18:27:57 INFO]: Server permissions file permissions.yml is empty, ignoring it
[18:27:57 INFO]: Preparing level "world"
[18:27:58 INFO]: Preparing start region for dimension minecraft:overworld
[18:27:58 INFO]: Time elapsed: 157 ms
[18:27:58 INFO]: Preparing start region for dimension minecraft:the_nether
[18:27:58 INFO]: Time elapsed: 56 ms
[18:27:58 INFO]: Preparing start region for dimension minecraft:the_end
[18:27:58 INFO]: Time elapsed: 90 ms
[18:27:58 INFO]: Running delayed init tasks
[18:27:58 INFO]: Done (1.170s)! For help, type "help"
[18:27:58 INFO]: Timings Reset


### Get a server's public data ###
Get a server's public data
XH example(s):
xh -A bearer -a "$token" GET https://localhost:8443/api/v2/servers/1/public
"
$token
"
GET /api/v2/servers//public
Example response body:
{
    "status": "ok",
    "data": {
        "server_id": 1,
        "created": "2022-05-25T01:24:22.427327",
        "server_name": "aaaaaaaaaaaaaaaa",
        "type": "minecraft-java"
    }
}
{
"status"
:
"ok"
,
"data"
:
{
"server_id"
:
1
,
"created"
:
"2022-05-25T01:24:22.427327"
,
"server_name"
:
"aaaaaaaaaaaaaaaa"
,
"type"
:
"minecraft-java"
}
}

### Get a server's statistics ###
Get a server's statistics
XH example(s):
xh -A bearer -a "$token" GET https://localhost:8443/api/v2/servers/1/stats
"
$token
"
GET /api/v2/servers//stats
Example response body:
{
    "status": "ok",
    "data": {
        "stats_id": 457,
        "created": "2022-05-25T18:47:41.814015",
        "server_id": {
            "server_id": 1,
            "created": "2022-05-25T01:24:22.427327",
            "server_uuid": "6079f8b1-d690-4974-9c0d-792480307a86",
            "server_name": "aaaaaaaaaaaaaaaa",
            "path": "/home/luukas/dev/crafty-commander/servers/6079f8b1-d690-4974-9c0d-792480307a86",
            "backup_path": "/home/luukas/dev/crafty-commander/backups/6079f8b1-d690-4974-9c0d-792480307a86",
            "executable": "paper-1.18.2.jar",
            "log_path": "/home/luukas/dev/crafty-commander/servers/6079f8b1-d690-4974-9c0d-792480307a86/logs/latest.log",
            "execution_command": "java -Xms1000M -Xmx2000M -jar /home/luukas/dev/crafty-commander/servers/6079f8b1-d690-4974-9c0d-792480307a86/paper-1.18.2.jar nogui",
            "auto_start": false,
            "auto_start_delay": 10,
            "crash_detection": false,
            "stop_command": "stop",
            "executable_update_url": "",
            "server_ip": "127.0.0.1",
            "server_port": 25565,
            "logs_delete_after": 0,
            "type": "minecraft-java"
        },
        "started": "2022-05-25 15:44:05",
        "running": true,
        "cpu": 0.33,
        "mem": "1.6GB",
        "mem_percent": 10.0,
        "world_name": "aaaaaaaaaaaaaaaa",
        "world_size": "185.4MB",
        "server_port": 25565,
        "int_ping_results": "True",
        "online": 0,
        "max": 20,
        "players": "[]",
        "desc": "A Minecraft Server",
        "version": "Paper 1.18.2",
        "updating": false,
        "waiting_start": false,
        "first_run": true,
        "crashed": false,
        "downloading": false
    }
}
{
"status"
:
"ok"
,
"data"
:
{
"stats_id"
:
457
,
"created"
:
"2022-05-25T18:47:41.814015"
,
"server_id"
:
{
"server_id"
:
1
,
"created"
:
"2022-05-25T01:24:22.427327"
,
"server_uuid"
:
"6079f8b1-d690-4974-9c0d-792480307a86"
,
"server_name"
:
"aaaaaaaaaaaaaaaa"
,
"path"
:
"/home/luukas/dev/crafty-commander/servers/6079f8b1-d690-4974-9c0d-792480307a86"
,
"backup_path"
:
"/home/luukas/dev/crafty-commander/backups/6079f8b1-d690-4974-9c0d-792480307a86"
,
"executable"
:
"paper-1.18.2.jar"
,
"log_path"
:
"/home/luukas/dev/crafty-commander/servers/6079f8b1-d690-4974-9c0d-792480307a86/logs/latest.log"
,
"execution_command"
:
"java -Xms1000M -Xmx2000M -jar /home/luukas/dev/crafty-commander/servers/6079f8b1-d690-4974-9c0d-792480307a86/paper-1.18.2.jar nogui"
,
"auto_start"
:
false
,
"auto_start_delay"
:
10
,
"crash_detection"
:
false
,
"stop_command"
:
"stop"
,
"executable_update_url"
:
""
,
"server_ip"
:
"127.0.0.1"
,
"server_port"
:
25565
,
"logs_delete_after"
:
0
,
"type"
:
"minecraft-java"
},
"started"
:
"2022-05-25 15:44:05"
,
"running"
:
true
,
"cpu"
:
0.33
,
"mem"
:
"1.6GB"
,
"mem_percent"
:
10.0
,
"world_name"
:
"aaaaaaaaaaaaaaaa"
,
"world_size"
:
"185.4MB"
,
"server_port"
:
25565
,
"int_ping_results"
:
"True"
,
"online"
:
0
,
"max"
:
20
,
"players"
:
"[]"
,
"desc"
:
"A Minecraft Server"
,
"version"
:
"Paper 1.18.2"
,
"updating"
:
false
,
"waiting_start"
:
false
,
"first_run"
:
true
,
"crashed"
:
false
,
"downloading"
:
false
}
}

### Get everyone with access to a server ###
Get everyone with access to a server
XH example(s):
xh -A bearer -a "$token" GET https://localhost:8443/api/v2/servers/1/users
"
$token
"
GET /api/v2/servers//users
Example response body:
{
    "status": "ok",
    "data": [
        1,
        3
    ]
}
{
"status"
:
"ok"
,
"data"
:
[
1
,
3
]
}

### Create a Schedule For a Server ###
Create a Schedule For a Server
XH example(s):
xh -A bearer -a "$token" POST https://localhost:8443/api/v2/servers/1/tasks/
"
$token
"
POST /api/v2/servers//tasks/
Example request body:
{ 
    "name": "Test 1234",
    "enabled": true,
    "action": "custom_command",
    "interval": 1,
    "interval_type": "minutes",
    "command": "say hello world",
    "parent": null,
    "one_time": false,
    "cron_string": "",
    "delay": 0
}
{
"name"
:
"Test 1234"
,
"enabled"
:
true
,
"action"
:
"custom_command"
,
"interval"
:
1
,
"interval_type"
:
"minutes"
,
"command"
:
"say hello world"
,
"parent"
:
null
,
"one_time"
:
false
,
"cron_string"
:
""
,
"delay"
:
0
}
Example response body:
{
    "status": "ok",
    "data": {
        "schedule_id": "3"
    }
}
{
"status"
:
"ok"
,
"data"
:
{
"schedule_id"
:
"3"
}
}

### Modify a Schedule For a Server ###
Modify a Schedule For a Server
XH example(s):
xh -A bearer -a "$token" PATCH https://localhost:8443/api/v2/servers/1/tasks/1
"
$token
"
PATCH /api/v2/servers//tasks/
Example request body:
{ 
    "name": "Test 5678",
    "enabled": false,
}
{
"name"
:
"Test 5678"
,
"enabled"
:
false
,
}
Example response body:
{
    "status": "ok",
}
{
"status"
:
"ok"
,
}

### Remove A Schedule ###
Remove A Schedule
XH example(s):
xh -A bearer -a "$token" DELETE https://localhost:8443/api/v2/servers/1/tasks/1
"
$token
"
DELETE /api/v2/servers//tasks/
Example response body:
{
    "status": "ok",
}
{
"status"
:
"ok"
,
}

### Create A Server Webhook ###
Create A Server Webhook
XH example(s):
xh -A bearer -a "$token" POST https://localhost:8443/api/v2/servers/1/webhook/
"
$token
"
POST /api/v2/servers//webhook/
Example request body:
{
    "webhook_type": "Discord",
    "name": "My example Webhook",
    "url": "https://webhook.url.com",
    "bot_name": "Crafty BOT",
    "trigger": ["server_start"],
    "body": "Server Has Started",
    "enabled": true
}
{
"webhook_type"
:
"Discord"
,
"name"
:
"My example Webhook"
,
"url"
:
"https://webhook.url.com"
,
"bot_name"
:
"Crafty BOT"
,
"trigger"
:
[
"server_start"
],
"body"
:
"Server Has Started"
,
"enabled"
:
true
}
Example response body:
{
    "status": "ok",
    "data": {
        "webhook_id": 1,
     },
}
{
"status"
:
"ok"
,
"data"
:
{
"webhook_id"
:
1
,
},
}

### Modify A Server Webhook ###
Modify A Server Webhook
XH example(s):
xh -A bearer -a "$token" PATCH https://localhost:8443/api/v2/servers/1/webhook/1/
"
$token
"
PATCH /api/v2/servers//webhook//
Example request body:
{
    "webhook_type": "Slack"
}
{
"webhook_type"
:
"Slack"
}
Example response body:
{
    "status": "ok",
}
{
"status"
:
"ok"
,
}

### Test A Server Webhook ###
Test A Server Webhook
XH example(s):
xh -A bearer -a "$token" POST https://localhost:8443/api/v2/servers/1/webhook/1/
"
$token
"
POST /api/v2/servers//webhook//
Example response body:
{
    "status": "ok",
}
{
"status"
:
"ok"
,
}

### Get All Server Webhooks ###
Get All Server Webhooks
XH example(s):
xh -A bearer -a "$token" GET https://localhost:8443/api/v2/servers/1/webhook/
"
$token
"
GET /api/v2/servers//webhook/
Example response body:
{
    "status": "ok",
    "data": {
        "1": {
            "webhook_type": "Discord",
            "name": "My example webhook",
            "url": "https://webhook.example.com",
            "bot_name": "BIG BOT",
            "trigger": "server_start,",
            "body": "Box was started\n",
            "enabled": true
        },
        "2": {
            "webhook_type": "Discord",
            "name": "test",
            "url": "https://webhook.example.com",
            "bot_name": "Crafty Controller",
            "trigger": "server_backup,",
            "body": "test1243\n",
            "enabled": false
        }
    }
}
{
"status"
:
"ok"
,
"data"
:
{
"1"
:
{
"webhook_type"
:
"Discord"
,
"name"
:
"My example webhook"
,
"url"
:
"https://webhook.example.com"
,
"bot_name"
:
"BIG BOT"
,
"trigger"
:
"server_start,"
,
"body"
:
"Box was started\n"
,
"enabled"
:
true
},
"2"
:
{
"webhook_type"
:
"Discord"
,
"name"
:
"test"
,
"url"
:
"https://webhook.example.com"
,
"bot_name"
:
"Crafty Controller"
,
"trigger"
:
"server_backup,"
,
"body"
:
"test1243\n"
,
"enabled"
:
false
}
}
}

### Get Webhook ###
Get Webhook
XH example(s):
xh -A bearer -a "$token" GET https://localhost:8443/api/v2/servers/1/webhook/3/
"
$token
"
GET /api/v2/servers//webhook/
Example response body:
{
    "status": "ok",
    "data": {
        "2": {
            "webhook_type": "Discord",
            "name": "test",
            "url": "https://webhook.example.com",
            "bot_name": "Crafty Controller",
            "trigger": "server_backup,",
            "body": "test1243\n",
            "enabled": false
        }
    }
}
{
"status"
:
"ok"
,
"data"
:
{
"2"
:
{
"webhook_type"
:
"Discord"
,
"name"
:
"test"
,
"url"
:
"https://webhook.example.com"
,
"bot_name"
:
"Crafty Controller"
,
"trigger"
:
"server_backup,"
,
"body"
:
"test1243\n"
,
"enabled"
:
false
}
}
}

### Delete Webhooks ###
Delete Webhooks
XH example(s):
xh -A bearer -a "$token" DELETE https://localhost:8443/api/v2/servers/1/webhook/3/
"
$token
"
DELETE /api/v2/servers//webhook/
Example response body:
{
    "status": "ok",
}
{
"status"
:
"ok"
,
}

### User requests ###
User requests

### Get all the users ###
Get all the users
XH example(s):
xh -A bearer -a "$token" GET https://localhost:8443/api/v2/users
"
$token
"
xh -A bearer -a "$token" GET https://localhost:8443/api/v2/users\?ids\=true
"
$token
"
\?
\=
true
GET /api/v2/users
GET /api/v2/users?ids=true
Example response body for the path /api/v2/users:
{
    "status": "ok",
    "data": [
        {
            "user_id": 1,
            "created": "05/18/2022, 01:43:56",
            "username": "admin",
            "enabled": true,
            "superuser": true,
            "lang": "en_EN"
        }
    ]
}
{
"status"
:
"ok"
,
"data"
:
[
{
"user_id"
:
1
,
"created"
:
"05/18/2022, 01:43:56"
,
"username"
:
"admin"
,
"enabled"
:
true
,
"superuser"
:
true
,
"lang"
:
"en_EN"
}
]
}
Example response body for the path /api/v2/users?ids=true:
{
    "status": "ok",
    "data": [
        1
    ]
}
{
"status"
:
"ok"
,
"data"
:
[
1
]
}

### Create a user ###
Create a user
XH example(s):
xh -A bearer -a "$token" POST https://localhost:8443/api/v2/users -- username='test' password='test' email='john.smith@example.com' lang='fi_FI' superuser:='true'
"
$token
"
username
=
'test'
password
=
'test'
email
=
'john.smith@example.com'
lang
=
'fi_FI'
=
'true'
POST /api/v2/users
Example request body:
{
    "username": "test",
    "password": "test",
    "manager": "1", (manager's user id)
    "email": "john.smith@example.com",
    "lang": "fi_FI",
    "superuser": true,
    "theme": "dark",
}
{
"username"
:
"test"
,
"password"
:
"test"
,
"manager"
:
"1"
,
(ma
na
ger's
user
id)
"email"
:
"john.smith@example.com"
,
"lang"
:
"fi_FI"
,
"superuser"
:
true
,
"theme"
:
"dark"
,
}
Example response body:
{
    "status": "ok",
    "data": {
        "user_id": "3"
    }
}
{
"status"
:
"ok"
,
"data"
:
{
"user_id"
:
"3"
}
}

### Get a user ###
Get a user
XH example(s):
xh -A bearer -a "$token" GET https://localhost:8443/api/v2/users/3
"
$token
"
GET /api/v2/users/
Example response body:
{
    "status": "ok",
    "data": {
        "user_id": 3,
        "created": "05/24/2022, 09:44:33",
        "last_login": "2022-05-24T09:44:33.646325",
        "last_update": "05/24/2022, 09:44:33",
        "last_ip": "",
        "username": "test",
        "email": "john.smith@example.com",
        "enabled": true,
        "superuser": true,
        "lang": "fi_FI",
        "support_logs": "",
        "server_order": "",
        "preparing": false,
        "hints": true,
        "roles": [
            {
                "role_id": 1,
                "created": "05/24/2022, 09:55:43",
                "last_update": "2022-05-24T09:55:43.373545",
                "role_name": "my testing role"
            }
        ]
    }
}
{
"status"
:
"ok"
,
"data"
:
{
"user_id"
:
3
,
"created"
:
"05/24/2022, 09:44:33"
,
"last_login"
:
"2022-05-24T09:44:33.646325"
,
"last_update"
:
"05/24/2022, 09:44:33"
,
"last_ip"
:
""
,
"username"
:
"test"
,
"email"
:
"john.smith@example.com"
,
"enabled"
:
true
,
"superuser"
:
true
,
"lang"
:
"fi_FI"
,
"support_logs"
:
""
,
"server_order"
:
""
,
"preparing"
:
false
,
"hints"
:
true
,
"roles"
:
[
{
"role_id"
:
1
,
"created"
:
"05/24/2022, 09:55:43"
,
"last_update"
:
"2022-05-24T09:55:43.373545"
,
"role_name"
:
"my testing role"
}
]
}
}

### Delete a user ###
Delete a user
XH example(s):
xh -A bearer -a "$token" DELETE https://localhost:8443/api/v2/users/3
"
$token
"
DELETE /api/v2/users/
Example response body:
{
    "status": "ok"
}
{
"status"
:
"ok"
}

### Modify a user ###
Modify a user
XH example(s):
xh -A bearer -a "$token" PATCH https://localhost:8443/api/v2/users/3 -- username='johnsmith' roles:='[1]'
"
$token
"
username
=
'johnsmith'
=
'[1]'
PATCH /api/v2/users/
Example request body:
{
    "username": "johnsmith",
    "roles": [1]
}
{
"username"
:
"johnsmith"
,
"roles"
:
[
1
]
}
Example response body: /permissions
Example response body:
{
    "status": "ok",
    "data": {
        "permissions": "110",
        "counters": {
            "SERVER_CREATION": 3,
            "USER_CONFIG": 0,
            "ROLES_CONFIG": 0
        },
        "limits": {
            "SERVER_CREATION": 5,
            "USER_CONFIG": 0,
            "ROLES_CONFIG": 0
        }
    }
}
{
"status"
:
"ok"
,
"data"
:
{
"permissions"
:
"110"
,
"counters"
:
{
"SERVER_CREATION"
:
3
,
"USER_CONFIG"
:
0
,
"ROLES_CONFIG"
:
0
},
"limits"
:
{
"SERVER_CREATION"
:
5
,
"USER_CONFIG"
:
0
,
"ROLES_CONFIG"
:
0
}
}
}

### Get a user's profile picture ###
Get a user's profile picture
XH example(s):
xh -A bearer -a "$token" GET https://localhost:8443/api/v2/users/3/pfp
"
$token
"
GET /api/v2/users//pfp
Example response body:
{
    "status": "ok",
    "data": "https://www.gravatar.com/avatar/93431c5d5a2b6a10ab3d5106d44d5590?default=404&rating=g"
}
{
"status"
:
"ok"
,
"data"
:
"https://www.gravatar.com/avatar/93431c5d5a2b6a10ab3d5106d44d5590?default=404&rating=g"
}

### Get a user's public data ###
Get a user's public data
XH example(s):
xh -A bearer -a "$token" GET https://localhost:8443/api/v2/users/3/public
"
$token
"
GET /api/v2/users//public
Example response body:
{
    "status": "ok",
    "data": {
        "user_id": 3,
        "created": "05/24/2022, 09:44:33",
        "username": "test",
        "enabled": true,
        "superuser": true,
        "lang": "fi_FI",
        "roles": []
    }
}
{
"status"
:
"ok"
,
"data"
:
{
"user_id"
:
3
,
"created"
:
"05/24/2022, 09:44:33"
,
"username"
:
"test"
,
"enabled"
:
true
,
"superuser"
:
true
,
"lang"
:
"fi_FI"
,
"roles"
:
[]
}
}

### Crafty requests ###
Crafty requests

### Modify Config.json ###
Modify Config.json
PATCH /api/v2/crafty/config
Example request body:
{
    "http_port": 8000,
    "https_port": 8443,
    "keywords": [
        "help",
        "chunk",
        "joined"
    ],

}
{
"http_port"
:
8000
,
"https_port"
:
8443
,
"keywords"
:
[
"help"
,
"chunk"
,
"joined"
],
}
Example response body:
{
    "status": "ok",
}
{
"status"
:
"ok"
,
}
Folder: docs
Folder: docs
Powered by TrueWiki
Content is available under GNU Free Documentation License

